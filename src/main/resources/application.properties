spring.application.name=LLMSystem

## —— 数据源配置 —— ##
# JDBC 连接 URL：指向我们在 2.2 中创建的数据库
#spring.datasource.url=jdbc:mysql://localhost:3306/llm_system_db?useSSL=false&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://localhost:3306/llm_system_db?useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8

# 数据库用户名/密码：使用我们创建的专用账号
spring.datasource.username=llm_user
spring.datasource.password=user

# JDBC 驱动类（MySQL 8+ 通用）
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

## —— JPA / Hibernate 配置 —— ##
# 每次启动时根据实体自动更新表结构（开发阶段推荐 update；生产慎用）
spring.jpa.hibernate.ddl-auto=update

# 禁用SQL日志输出，减少控制台信息
spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.connection.characterEncoding=utf8
#spring.jpa.properties.hibernate.connection.CharSet=utf8
#spring.jpa.properties.hibernate.connection.useUnicode=true

# 知识库文件本地存储目录，建议 IDE 下项目根目录的 subfolder
knowledge.upload-dir=knowledge-files


# 嵌入模式：ollama、djl或者remote
embedding.mode=ollama
ollama.embedModel=nomic-embed-text

# 对话模式：local 或 remote
chat.mode=local

# Ollama 本地模型名称
ollama.model=gemma3:4b

# Ollama 服务 URL
ollama.api.url=http://localhost:11434

# 日志配置
logging.level.root=INFO
logging.level.org.hibernate=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql=WARN
logging.level.org.springframework.web.servlet.handler=INFO
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=INFO

# --- 机器人提示词设定 ---
chatbot.prompt.system=
chatbot.prompt.fallback=
chatbot.prompt.preventHallucination=
chatbot.prompt.citation=
chatbot.prompt.formatInstruction=

# --- Spring Cloud 配置刷新相关 ---
# 开启 /actuator/refresh 端点（用于手动触发配置刷新）
management.endpoints.web.exposure.include=refresh,health,info
management.endpoint.health.show-details=always